{"EntityType": "Change", "ProcessSelectionField": "ChangeWorkflowType", "DefaultProcessId": "Normal",
    "RuleDefinitions": [
        {
            "id": "applyChangeModel",
            "Type": "action",
            "TemplateId": "applyModel",
            "Parameters": [
                {
                    "Name": "relatedModel",
                    "Value": "${current_update.BasedOnChangeModel.NewValue.Id}"
                }
            ]
        },
        {
            "id": "SetDefaultValueForBreachState",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "BreachStatus"
                },
                {
                    "Name": "value",
                    "Value": "NotCalculated"
                }
            ]
        },
        {
            "id": "addChangeModelReplacementComment",
            "Type": "action",
            "TemplateId": "addComment",
            "Parameters": [
                {
                    "Name": "comment",
                    "Value": "${concat('Change model \"',current_update.BasedOnChangeModel.NewValue.DisplayLabel,'\" has replaced change model \"',current_update.BasedOnChangeModel.OldValue.DisplayLabel,'\"')}"
                },
                {
                    "Name": "isSystem",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "generatePlanForPlan",
            "Type": "action",
            "TemplateId": "TasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "Source",
                    "Value": "${entity.BasedOnChangeModel.TaskPlanForPlan}"
                },
                {
                    "Name": "DestinationFieldName",
                    "Value": "TasksExecutionPlanPlan"
                }
            ]
        },
        {
            "id": "generatePlanForBuildAndTest",
            "Type": "action",
            "TemplateId": "TasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "Source",
                    "Value": "${entity.BasedOnChangeModel.TaskPlanForBuildAndTest}"
                },
                {
                    "Name": "DestinationFieldName",
                    "Value": "TasksExecutionPlanBuildAndTest"
                }
            ]
        },
        {
            "id": "generatePlanForExecute",
            "Type": "action",
            "TemplateId": "TasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "Source",
                    "Value": "${entity.BasedOnChangeModel.TaskPlanForExecute}"
                },
                {
                    "Name": "DestinationFieldName",
                    "Value": "TasksExecutionPlanExecute"
                }
            ]
        },
        {
            "id": "generatePlanForCMDBUpdate",
            "Type": "action",
            "TemplateId": "TasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "Source",
                    "Value": "${entity.BasedOnChangeModel.TaskPlanForCMDBUpdate}"
                },
                {
                    "Name": "DestinationFieldName",
                    "Value": "TasksExecutionPlanCMDBUpdate"
                }
            ]
        },
        {
            "id": "generatePlanForBackout",
            "Type": "action",
            "TemplateId": "TasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "Source",
                    "Value": "${entity.BasedOnChangeModel.TaskPlanForBackout}"
                },
                {
                    "Name": "DestinationFieldName",
                    "Value": "TasksExecutionPlanBackout"
                }
            ]
        },
        {
            "id": "generatePlanForReview",
            "Type": "action",
            "TemplateId": "TasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "Source",
                    "Value": "${entity.BasedOnChangeModel.TaskPlanForReview}"
                },
                {
                    "Name": "DestinationFieldName",
                    "Value": "TasksExecutionPlanReview"
                }
            ]
        },
        {
            "id": "OrchestratePlanForEmergency",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanPlan"
                }
            ]
        },
        {
            "id": "OrchestratePlanForNormal",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanPlan"
                }
            ]
        },
        {
            "id": "OrchestratePlanForStandard",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanPlan"
                }
            ]
        },
        {
            "id": "OrchestrateBuildAndTestForEmergency",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanBuildAndTest"
                }
            ]
        },
        {
            "id": "OrchestrateBuildAndTestForNormal",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanBuildAndTest"
                }
            ]
        },
        {
            "id": "OrchestrateExecuteForStandard",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanExecute"
                }
            ]
        },
        {
            "id": "OrchestrateExecuteForNormal",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanExecute"
                }
            ]
        },
        {
            "id": "OrchestrateExecuteForEmergency",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanExecute"
                }
            ]
        },
        {
            "id": "OrchestrateCMDBUpdateForEmergency",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanCMDBUpdate"
                }
            ]
        },
        {
            "id": "OrchestrateCMDBUpdateForStandard",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanCMDBUpdate"
                }
            ]
        },
        {
            "id": "OrchestrateCMDBUpdateForNormal",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanCMDBUpdate"
                }
            ]
        },
        {
            "id": "OrchestrateBackoutForStandard",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanBackout"
                }
            ]
        },
        {
            "id": "OrchestrateBackoutForNormal",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanBackout"
                }
            ]
        },
        {
            "id": "OrchestrateBackoutForEmergency",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanBackout"
                }
            ]
        },
        {
            "id": "OrchestrateReviewForEmergency",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanReview"
                }
            ]
        },
        {
            "id": "OrchestrateReviewForStandard",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanReview"
                }
            ]
        },
        {
            "id": "OrchestrateReviewForNormal",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanReview"
                }
            ]
        },
        {
            "id": "OrchestrateApprovePlan",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanApprovePlan"
                }
            ]
        },
        {
            "id": "OrchestrateApproveDeployment",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanApproveDeployment"
                }
            ]
        },
        {
            "id": "OrchestrateECAB",
            "Type": "action",
            "TemplateId": "TasksOrchestrate",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanECAB"
                }
            ]
        },
        {
            "id": "SetEmergencyWorkflowTypeForStandard",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "ChangeWorkflowType"
                },
                {
                    "Name": "value",
                    "Value": "EmergencyChange"
                }
            ]
        },
        {
            "id": "SetBuildAndTestTrueInLogPhase",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "BuildAndTestRequired"
                },
                {
                    "Name": "value",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "CloseTimeIsNotSet1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.CloseTime == null}"
                }
            ]
        },
        {
            "id": "CloseTimeIsNotSet2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.CloseTime == null}"
                }
            ]
        },
        {
            "id": "CloseTimeIsNotSet3",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.CloseTime == null}"
                }
            ]
        },
        {
            "id": "CloseTimeShouldBeSetSystem1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId == 'Close' && entity.CloseTime == null}"
                }
            ]
        },
        {
            "id": "CloseTimeShouldBeSetSystem2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId == 'Close' && entity.CloseTime == null}"
                }
            ]
        },
        {
            "id": "CloseTimeShouldBeSetSystem3",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId == 'Close' && entity.CloseTime == null}"
                }
            ]
        },
        {
            "id": "SetCloseTimeToNow1",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CloseTime"
                },
                {
                    "Name": "value",
                    "Value": "${now()}"
                }
            ]
        },
        {
            "id": "SetCloseTimeToNow2",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CloseTime"
                },
                {
                    "Name": "value",
                    "Value": "${now()}"
                }
            ]
        },
        {
            "id": "SetCloseTimeToNow3",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CloseTime"
                },
                {
                    "Name": "value",
                    "Value": "${now()}"
                }
            ]
        },
        {
            "id": "SetCloseTimeToNowSystem1",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CloseTime"
                },
                {
                    "Name": "value",
                    "Value": "${now()}"
                }
            ]
        },
        {
            "id": "SetCloseTimeToNowSystem2",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CloseTime"
                },
                {
                    "Name": "value",
                    "Value": "${now()}"
                }
            ]
        },
        {
            "id": "SetCloseTimeToNowSystem3",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CloseTime"
                },
                {
                    "Name": "value",
                    "Value": "${now()}"
                }
            ]
        },
        {
            "id": "SetEmergencyWorkflowTypeForNormal",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "ChangeWorkflowType"
                },
                {
                    "Name": "value",
                    "Value": "EmergencyChange"
                }
            ]
        },
        {
            "id": "SetRequestedByPerson1",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "RequestedByPerson"
                },
                {
                    "Name": "value",
                    "Value": "${current_user}"
                }
            ]
        },
        {
            "id": "SetRequestedByPerson2",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "RequestedByPerson"
                },
                {
                    "Name": "value",
                    "Value": "${current_user}"
                }
            ]
        },
        {
            "id": "SetRequestedByPerson4",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "RequestedByPerson"
                },
                {
                    "Name": "value",
                    "Value": "${current_user}"
                }
            ]
        },
        {
            "id": "SendNotificationOnChangeClosed1",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeClosed"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.AffectsActualService.OwnedByPerson}"
                        },
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationOnChangeClosed2",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeClosed"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.AffectsActualService.OwnedByPerson}"
                        },
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationOnChangeClosed3",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeClosed"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.AffectsActualService.OwnedByPerson}"
                        },
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationOnChangeAbandoned1",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeAbandoned"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationOnChangeAbandoned2",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeAbandoned"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationOnChangeAbandoned3",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeAbandoned"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToServiceOwnerStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasBeenOpened"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.AffectsActualService.OwnedByPerson}"
                        },
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToServiceOwnerNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasBeenOpened"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.AffectsActualService.OwnedByPerson}"
                        },
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToServiceOwnerEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasBeenOpened"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.AffectsActualService.OwnedByPerson}"
                        },
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerPlanPhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedPlanningPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerPlanPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedPlanningPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonPlanPhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedPlanningPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonPlanPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedPlanningPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerApprovePlanPhase",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedApprovePlanPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonApprovePlanPhase",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedApprovePlanPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerBuildPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBuildPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerBuildPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBuildPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonBuildPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBuildPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonBuildPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBuildPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerApproveDeploymentPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedApproveDeploymentPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerApproveDeploymentPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedApproveDeploymentPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonApproveDeploymentPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedApproveDeploymentPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonApproveDeploymentPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedApproveDeploymentPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerExecutePhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedExecutePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerExecutePhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedExecutePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerExecutePhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedExecutePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonExecutePhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedExecutePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonExecutePhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedExecutePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonExecutePhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedExecutePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerBackoutPhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBackoutPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerBackoutPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBackoutPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerBackoutPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBackoutPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonBackoutPhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBackoutPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonBackoutPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBackoutPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonBackoutPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedBackoutPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerCmdbUpdatePhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedCmdbUpdatePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerCmdbUpdatePhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedCmdbUpdatePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerCmdbUpdatePhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedCmdbUpdatePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonCmdbUpdatePhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedCmdbUpdatePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonCmdbUpdatePhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedCmdbUpdatePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonCmdbUpdatePhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedCmdbUpdatePhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerReviewPhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedReviewPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerReviewPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedReviewPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToGroupManagerReviewPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedReviewPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${group_id_by_upn('Change_Manager_Group')}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonReviewPhaseStandard",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedReviewPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonReviewPhaseNormal",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedReviewPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToAssignedPersonReviewPhaseEmergency",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeHasReachedReviewPhase"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToChangeOwnerOnDeploymentDeny1",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeDeploymentDenied"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        },
                        {
                            "Value": "${entity.OwnedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToChangeOwnerOnDeploymentDeny2",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeDeploymentDenied"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        },
                        {
                            "Value": "${entity.OwnedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToChangeOwnerOnPlanDeny",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangePlanDenied"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        },
                        {
                            "Value": "${entity.OwnedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "SendNotificationToChangeOwnerOnECABDeny",
            "Type": "action",
            "TemplateId": "sendNotification",
            "Parameters": [
                {
                    "Name": "templateId",
                    "Value": "ChangeECABDenied"
                },
                {
                    "Name": "templateParameters",
                    "Values": []
                },
                {
                    "Name": "recipients",
                    "Values": [
                        {
                            "Value": "${entity.RequestedByPerson.Id}"
                        },
                        {
                            "Value": "${entity.OwnedByPerson.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "GLAForEmergencyGenerateExecutionPlan",
            "Type": "action",
            "TemplateId": "GovernanceTasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "originFulfillmentName",
                    "Value": "Emergency Change – ECAB"
                },
                {
                    "Name": "destinationFieldName",
                    "Value": "TasksExecutionPlanECAB"
                }
            ]
        },
        {
            "id": "GLAForNormalApprovePlanGenerateExecutionPlan",
            "Type": "action",
            "TemplateId": "GovernanceTasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "originFulfillmentName",
                    "Value": "Normal Change – Approve Plan"
                },
                {
                    "Name": "destinationFieldName",
                    "Value": "TasksExecutionPlanApprovePlan"
                }
            ]
        },
        {
            "id": "GLAForNormalApproveDeploymentGenerateExecutionPlan",
            "Type": "action",
            "TemplateId": "GovernanceTasksGenerateExecutionPlan",
            "Parameters": [
                {
                    "Name": "originFulfillmentName",
                    "Value": "Normal Change – Approve Deployment"
                },
                {
                    "Name": "destinationFieldName",
                    "Value": "TasksExecutionPlanApproveDeployment"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned1",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned2",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned3",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned4",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned5",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned6",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned7",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned8",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned9",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned10",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned11",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned12",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetCompletionCodeAsAbandoned13",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "CompletionCode"
                },
                {
                    "Name": "value",
                    "Value": "Abandoned"
                }
            ]
        },
        {
            "id": "SetUrgencyAsSlightDisruption2",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Urgency"
                },
                {
                    "Name": "value",
                    "Value": "SlightDisruption"
                }
            ]
        },
        {
            "id": "SetUrgencyAsSlightDisruption3",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Urgency"
                },
                {
                    "Name": "value",
                    "Value": "SlightDisruption"
                }
            ]
        },
        {
            "id": "SetUrgencyAsSlightDisruption5",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Urgency"
                },
                {
                    "Name": "value",
                    "Value": "SlightDisruption"
                }
            ]
        },
        {
            "id": "SetUrgencyAsSlightDisruption6",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Urgency"
                },
                {
                    "Name": "value",
                    "Value": "SlightDisruption"
                }
            ]
        },
        {
            "id": "SetUrgencyAsSevereDisruption1",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Urgency"
                },
                {
                    "Name": "value",
                    "Value": "SevereDisruption"
                }
            ]
        },
        {
            "id": "SetUrgencyAsSevereDisruption2",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Urgency"
                },
                {
                    "Name": "value",
                    "Value": "SevereDisruption"
                }
            ]
        },
        {
            "id": "SetHighPriority",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Priority"
                },
                {
                    "Name": "value",
                    "Value": "HighPriority"
                }
            ]
        },
        {
            "id": "SetLowPriority",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Priority"
                },
                {
                    "Name": "value",
                    "Value": "LowPriority"
                }
            ]
        },
        {
            "id": "SetMediumPriority",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Priority"
                },
                {
                    "Name": "value",
                    "Value": "MediumPriority"
                }
            ]
        },
        {
            "id": "SetCriticalPriority",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Priority"
                },
                {
                    "Name": "value",
                    "Value": "CriticalPriority"
                }
            ]
        },
        {
            "id": "setActiveFlag-11",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Active"
                },
                {
                    "Name": "value",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "setActiveFlag-21",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Active"
                },
                {
                    "Name": "value",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "setActiveFlag-31",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Active"
                },
                {
                    "Name": "value",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "unsetActiveFlag-11",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Active"
                },
                {
                    "Name": "value",
                    "Value": "false"
                }
            ]
        },
        {
            "id": "unsetActiveFlag-21",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Active"
                },
                {
                    "Name": "value",
                    "Value": "false"
                }
            ]
        },
        {
            "id": "unsetActiveFlag-31",
            "Type": "action",
            "TemplateId": "setField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Active"
                },
                {
                    "Name": "value",
                    "Value": "false"
                }
            ]
        },
        {
            "id": "changeModelUpdatedForApplyModel",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged}"
                }
            ]
        },
        {
            "id": "changeModelUpdatedForReview",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged}"
                }
            ]
        },
        {
            "id": "changeModelUpdatedForBackout",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged}"
                }
            ]
        },
        {
            "id": "changeModelUpdatedForCMDBUpdate",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged}"
                }
            ]
        },
        {
            "id": "changeModelUpdatedForExecute",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged}"
                }
            ]
        },
        {
            "id": "changeModelUpdatedForBuildAndTest",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged}"
                }
            ]
        },
        {
            "id": "changeModelUpdatedForPlan",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged}"
                }
            ]
        },
        {
            "id": "changeModelReplaced",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.BasedOnChangeModel.IsChanged && current_update.BasedOnChangeModel.OldValue != null}"
                }
            ]
        },
        {
            "id": "isNotInReviewCloseSection",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Review' && entity.PhaseId != 'Close'}"
                }
            ]
        },
        {
            "id": "isNotInReviewCloseSection2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Review' && entity.PhaseId != 'Close'}"
                }
            ]
        },
        {
            "id": "isNotInReviewCloseSection3",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Review' && entity.PhaseId != 'Close'}"
                }
            ]
        },
        {
            "id": "TasksExecutionPlanPlanUpdated",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.TasksExecutionPlanPlan.IsChanged && current_update.TasksExecutionPlanPlan.NewValue != null}"
                }
            ]
        },
        {
            "id": "TasksExecutionPlanBuildAndTestUpdated",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.TasksExecutionPlanBuildAndTest.IsChanged && current_update.TasksExecutionPlanBuildAndTest.NewValue != null}"
                }
            ]
        },
        {
            "id": "TasksExecutionPlanExecuteUpdated",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.TasksExecutionPlanExecute.IsChanged && current_update.TasksExecutionPlanExecute.NewValue != null}"
                }
            ]
        },
        {
            "id": "TasksExecutionPlanCMDBUpdateUpdated",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.TasksExecutionPlanCMDBUpdate.IsChanged && current_update.TasksExecutionPlanCMDBUpdate.NewValue != null}"
                }
            ]
        },
        {
            "id": "TasksExecutionPlanBackoutUpdated",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.TasksExecutionPlanBackout.IsChanged && current_update.TasksExecutionPlanBackout.NewValue != null}"
                }
            ]
        },
        {
            "id": "TasksExecutionPlanReviewUpdated",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.TasksExecutionPlanReview.IsChanged && current_update.TasksExecutionPlanReview.NewValue != null}"
                }
            ]
        },
        {
            "id": "EmergencyCheckboxIsSetForStandard",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.EmergencyChange.IsChanged && entity.EmergencyChange == true}"
                }
            ]
        },
        {
            "id": "EmergencyCheckboxIsSetForNormal",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.EmergencyChange.IsChanged && entity.EmergencyChange == true}"
                }
            ]
        },
        {
            "id": "CanCreateEmergencyChangeForNormalIfSet",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.EmergencyChange.IsChanged && entity.EmergencyChange == true}"
                }
            ]
        },
        {
            "id": "CanCreateEmergencyChangeForStandardIfSet",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.EmergencyChange.IsChanged && entity.EmergencyChange == true}"
                }
            ]
        },
        {
            "id": "CanCreateEmergencyChangeForEmergencyIfSet",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.EmergencyChange.IsChanged && entity.EmergencyChange == true}"
                }
            ]
        },
        {
            "id": "UrgencyIsNotSet1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Urgency == null}"
                }
            ]
        },
        {
            "id": "UrgencyIsNotSet2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Urgency == null}"
                }
            ]
        },
        {
            "id": "UrgencyIsNotSet4",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Urgency == null}"
                }
            ]
        },
        {
            "id": "UrgencyIsNotSet5",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Urgency == null}"
                }
            ]
        },
        {
            "id": "UrgencyIsNotSet7",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Urgency == null}"
                }
            ]
        },
        {
            "id": "UrgencyIsNotSet8",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Urgency == null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet3",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet4",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet5",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet6",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet7",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet8",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet9",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet10",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet11",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet12",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet13",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet14",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet15",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet16",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet17",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet18",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet19",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet20",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet21",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsNotSet22",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson == null || entity.RequestedByPerson == ''}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet3",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet4",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet5",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet6",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet7",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet8",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet9",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet10",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet11",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet12",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet13",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet14",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet15",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet16",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet17",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet18",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "RequestedByPersonIsSet19",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.RequestedByPerson != null}"
                }
            ]
        },
        {
            "id": "LogPhaseMandatoryFieldsStandard",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${(entity.Description != null) &&\r\n                                (entity.RequestedByPerson != null) &&\r\n                                (entity.ReasonForChange != null) &&\r\n                                (entity.BasedOnChangeModel != null) &&\r\n                                (entity.Justification != null) &&\r\n                                (entity.AffectsActualService != null)\r\n                                }"
                }
            ]
        },
        {
            "id": "LogPhaseMandatoryFieldsNormal",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${(entity.Description != null) &&\r\n                                (entity.RequestedByPerson != null) &&\r\n                                (entity.ReasonForChange != null) &&\r\n                                (entity.BasedOnChangeModel != null) &&\r\n                                (entity.Justification != null) &&\r\n                                (entity.AffectsActualService != null)\r\n                                }"
                }
            ]
        },
        {
            "id": "LogPhaseMandatoryFieldsEmergency",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${(entity.Description != null) &&\r\n                                (entity.RequestedByPerson != null) &&\r\n                                (entity.ReasonForChange != null) &&\r\n                                (entity.BasedOnChangeModel != null) &&\r\n                                (entity.Justification != null) &&\r\n                                (entity.AffectsActualService != null)\r\n                                }"
                }
            ]
        },
        {
            "id": "ApproveSuccessConditionForApproveDeploymentTestRequiredFalse",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.BuildAndTestRequired == false &&\r\n                                (entity.TasksExecutionPlanApprovePlan == null ||\r\n                                 entity.TasksExecutionPlanApprovePlan.ExecutionPlanCompletionCode == 'Success')}"
                }
            ]
        },
        {
            "id": "TestRequiredEqualsTrue2AndApproveDenied",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.BuildAndTestRequired == true &&\r\n                                entity.TasksExecutionPlanApproveDeployment.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "BuildAndTestRequiredEqualsFalseAndApprovedDenied",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.BuildAndTestRequired == false &&\r\n                                entity.TasksExecutionPlanApprovePlan.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "GLAForEmergencyChange",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${(entity.BasedOnChangeModel != current_update.BasedOnChangeModel.OldValue) && (entity.ChangeWorkflowType == 'EmergencyChange')}"
                }
            ]
        },
        {
            "id": "GLAForNormalChangeApprovePlan",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${(entity.BasedOnChangeModel != current_update.BasedOnChangeModel.OldValue) && (entity.ChangeWorkflowType == 'NormalChange')}"
                }
            ]
        },
        {
            "id": "GLAForNormalChangeApproveDeployment",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${(entity.BasedOnChangeModel != current_update.BasedOnChangeModel.OldValue) && (entity.ChangeWorkflowType == 'NormalChange')}"
                }
            ]
        },
        {
            "id": "CriticalPriorityCondition",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Urgency == 'TotalLossOfService' && entity.ImpactScope == 'Enterprise'}"
                }
            ]
        },
        {
            "id": "HighPriorityCondition",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${\r\n                                (\r\n                                    ((entity.Urgency == 'SevereDisruption' || entity.Urgency == 'SlightDisruption')  && entity.ImpactScope == 'Enterprise')\r\n                                    ||\r\n                                    ((entity.Urgency == 'SevereDisruption' || entity.Urgency == 'TotalLossOfService') &&  entity.ImpactScope == 'SiteOrDepartment')\r\n                                    ||\r\n                                    ((entity.Urgency == 'TotalLossOfService')  &&  entity.ImpactScope == 'MultipleUsers')\r\n                                )\r\n                            }"
                }
            ]
        },
        {
            "id": "LowPriorityCondition",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${\r\n                                            (\r\n                                                ((entity.Urgency == 'SlightDisruption' || entity.Urgency == 'NoDisruption')  && entity.ImpactScope == 'SingleUser')\r\n                                                ||\r\n                                                (entity.Urgency == 'NoDisruption'  &&  entity.ImpactScope == 'MultipleUsers')\r\n                                            )\r\n                                   }"
                }
            ]
        },
        {
            "id": "MediumPriorityCondition",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${\r\n                                    (\r\n                                        ((entity.Urgency == 'SevereDisruption' || entity.Urgency == 'SlightDisruption')  && entity.ImpactScope == 'MultipleUsers')\r\n                                        ||\r\n                                        ((entity.Urgency == 'SevereDisruption' || entity.Urgency == 'TotalLossOfService') &&  entity.ImpactScope == 'SingleUser')\r\n                                        ||\r\n                                        ((entity.Urgency == 'SlightDisruption' || entity.Urgency == 'NoDisruption')  && entity.ImpactScope == 'SiteOrDepartment')\r\n                                        ||\r\n                                        (entity.Urgency == 'NoDisruption'  &&  entity.ImpactScope == 'Enterprise')\r\n                                    )\r\n                            }"
                }
            ]
        },
        {
            "id": "scheduledTimeChanged",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.ScheduledStartTime.IsChanged || current_update.ScheduledEndTime.IsChanged}"
                }
            ]
        },
        {
            "id": "scheduledDownTimeChanged",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.ScheduledDowntimeStartTime.IsChanged || current_update.ScheduledDowntimeEndTime.IsChanged}"
                }
            ]
        },
        {
            "id": "approveSuccessConditionForECAB",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanECAB == null ||\r\n                                entity.TasksExecutionPlanECAB.ExecutionPlanCompletionCode == 'Success'}"
                }
            ]
        },
        {
            "id": "approveSuccessConditionForApprovePlanAndTestRequiredTrue",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.BuildAndTestRequired == true &&\r\n                               (entity.TasksExecutionPlanApprovePlan == null ||\r\n                                entity.TasksExecutionPlanApprovePlan.ExecutionPlanCompletionCode == 'Success')}"
                }
            ]
        },
        {
            "id": "approveDeniedConditionForECAB1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanECAB.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "approveDeniedConditionForECAB2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanECAB.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "approveDeniedConditionForApprovePlan1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanApprovePlan.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "approveDeniedConditionForApprovePlan2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanApprovePlan.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "valueForBreachedStateIsNotCalculated1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.BreachStatus == null || entity.BreachStatus == ''}"
                }
            ]
        },
        {
            "id": "approveDeniedConditionForApproveDeployment1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanApproveDeployment.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "approveDeniedConditionForApproveDeployment2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanApproveDeployment.ExecutionPlanCompletionCode == 'Failed'}"
                }
            ]
        },
        {
            "id": "approveSuccessForApproveDeployment",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanApproveDeployment == null ||\r\n                                entity.TasksExecutionPlanApproveDeployment.ExecutionPlanCompletionCode == 'Success'}"
                }
            ]
        },
        {
            "id": "isNotCreate",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log'}"
                }
            ]
        },
        {
            "id": "phaseIdNotLog1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log'}"
                }
            ]
        },
        {
            "id": "phaseIdNotLog2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log'}"
                }
            ]
        },
        {
            "id": "phaseIdNotLogAndEvaluate1",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log' && entity.PhaseId != 'Evaluate'}"
                }
            ]
        },
        {
            "id": "phaseIdNotLogAndEvaluate2",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log' && entity.PhaseId != 'Evaluate'}"
                }
            ]
        },
        {
            "id": "phaseIdNotLogAndEvaluate3",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log' && entity.PhaseId != 'Evaluate'}"
                }
            ]
        },
        {
            "id": "phaseIdNotLogAndEvaluate4",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log' && entity.PhaseId != 'Evaluate'}"
                }
            ]
        },
        {
            "id": "phaseIdNotLogAndEvaluateAndPlan",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log' && entity.PhaseId != 'Evaluate' && entity.PhaseId != 'Plan'}"
                }
            ]
        },
        {
            "id": "isInLogPhase",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId == 'Log'}"
                }
            ]
        },
        {
            "id": "isNotInLogOrEvaluatePhase",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.PhaseId != 'Log' && entity.PhaseId != 'Evaluate'}"
                }
            ]
        },
        {
            "id": "isScheduledTimeNotNull1",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledStartTime != null && entity.ScheduledEndTime != null && (current_update.ScheduledStartTime.IsChanged || current_update.ScheduledEndTime.IsChanged)}"
                }
            ]
        },
        {
            "id": "isScheduledTimeNotNull2",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledStartTime != null && entity.ScheduledEndTime != null && (current_update.ScheduledStartTime.IsChanged || current_update.ScheduledEndTime.IsChanged)}"
                }
            ]
        },
        {
            "id": "isScheduledDowntimeStartTimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledDowntimeStartTime != null && (current_update.ScheduledDowntimeStartTime.IsChanged || current_update.ScheduledStartTime.IsChanged)}"
                }
            ]
        },
        {
            "id": "isScheduledDowntimeEndTimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledDowntimeEndTime != null && (current_update.ScheduledDowntimeEndTime.IsChanged || current_update.ScheduledEndTime.IsChanged)}"
                }
            ]
        },
        {
            "id": "isActualDowntimeStartTimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ActualDowntimeStartTime != null && (current_update.ActualDowntimeStartTime.IsChanged || current_update.ActualStartTime.IsChanged)}"
                }
            ]
        },
        {
            "id": "isActualDowntimeEndTimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ActualDowntimeEndTime != null && (current_update.ActualDowntimeEndTime.IsChanged || current_update.ActualEndTime.IsChanged)}"
                }
            ]
        },
        {
            "id": "isNotPermittedToCreateEmergencyChange",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${!current_user.IsPermitted('Can-Create-Emergency-Change()')}"
                }
            ]
        },
        {
            "id": "ServiceAndCategorySelected",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Category != null && entity.AffectsActualService != null}"
                }
            ]
        },
        {
            "id": "ServiceAndCategorySelected2",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Category != null && entity.AffectsActualService != null}"
                }
            ]
        },
        {
            "id": "OnlyServiceSelected",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Category == null && entity.AffectsActualService != null}"
                }
            ]
        },
        {
            "id": "OnlyCategorySelected",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Category != null && entity.AffectsActualService == null}"
                }
            ]
        },
        {
            "id": "OnlyCategorySelected2",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Category != null && entity.AffectsActualService == null}"
                }
            ]
        },
        {
            "id": "ServiceAndCategoryEmpty",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.Category == null && entity.AffectsActualService == null}"
                }
            ]
        },
        {
            "id": "shouldCalculateBreach",
            "Type": "condition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.AffectsActualService != null && (current_update.ScheduledStartTime.IsChanged || current_update.ScheduledEndTime.IsChanged || current_update.AffectsActualService.IsChanged)}"
                }
            ]
        },
        {
            "id": "checkForOwnedByGroupGroupMembersCondition",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.OwnedByGroup != null}"
                }
            ]
        },
        {
            "id": "validateTaskPlanForPlan",
            "Type": "validation",
            "TemplateId": "tasksGraphValidation",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanPlan"
                }
            ]
        },
        {
            "id": "validateTaskPlanForBuildAndTest",
            "Type": "validation",
            "TemplateId": "tasksGraphValidation",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanBuildAndTest"
                }
            ]
        },
        {
            "id": "validateTaskPlanForExecute",
            "Type": "validation",
            "TemplateId": "tasksGraphValidation",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanExecute"
                }
            ]
        },
        {
            "id": "validateTaskPlanForCMDBUpdate",
            "Type": "validation",
            "TemplateId": "tasksGraphValidation",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanCMDBUpdate"
                }
            ]
        },
        {
            "id": "validateTaskPlanForBackout",
            "Type": "validation",
            "TemplateId": "tasksGraphValidation",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanBackout"
                }
            ]
        },
        {
            "id": "validateTaskPlanForReview",
            "Type": "validation",
            "TemplateId": "tasksGraphValidation",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanReview"
                }
            ]
        },
        {
            "id": "CanCreateEmergencyChangeForNormal",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_user.IsPermitted('Can-Create-Emergency-Change()')}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "EmergencyChangeCreationIsNotPermitted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "CanCreateEmergencyChangeForEmergency",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_user.IsPermitted('Can-Create-Emergency-Change()')}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "EmergencyChangeCreationIsNotPermitted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "CanCreateEmergencyChangeForStandard",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_user.IsPermitted('Can-Create-Emergency-Change()')}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "EmergencyChangeCreationIsNotPermitted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "EmergencyCheckboxNotChanged",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${!current_update.EmergencyChange.IsChanged || current_update.EmergencyChange.OldValue == current_update.EmergencyChange.NewValue}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "EmergencyChangeCanBeEditedInLogPhaseOnly.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "executeTasksCompletedNormal",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanExecute == null ||\r\n                                entity.TasksExecutionPlanExecute.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "executeTasksCompletedStandard",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanExecute == null ||\r\n                                entity.TasksExecutionPlanExecute.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "executeTasksCompletedEmergency",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanExecute == null ||\r\n                                entity.TasksExecutionPlanExecute.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "planTasksCompletedNormal",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanPlan == null ||\r\n                                entity.TasksExecutionPlanPlan.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "planTasksCompletedStandard",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanPlan == null ||\r\n                                entity.TasksExecutionPlanPlan.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "planTasksCompletedEmergency",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanPlan == null ||\r\n                                entity.TasksExecutionPlanPlan.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "reviewTasksCompletedNormal",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanReview == null ||\r\n                                entity.TasksExecutionPlanReview.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "reviewTasksCompletedStandard",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanReview == null ||\r\n                                entity.TasksExecutionPlanReview.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "reviewTasksCompletedEmergency",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanReview == null ||\r\n                                entity.TasksExecutionPlanReview.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "backoutTasksCompleted",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanBackout == null ||\r\n                                entity.TasksExecutionPlanBackout.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "backoutTasksCompletedForStandard",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanBackout == null ||\r\n                                entity.TasksExecutionPlanBackout.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "backoutTasksCompletedForEmergency",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanBackout == null ||\r\n                                entity.TasksExecutionPlanBackout.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "cmdbUpdateTasksCompletedNormal",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanCMDBUpdate == null ||\r\n                                entity.TasksExecutionPlanCMDBUpdate.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "cmdbUpdateTasksCompletedStandard",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanCMDBUpdate == null ||\r\n                                entity.TasksExecutionPlanCMDBUpdate.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "cmdbUpdateTasksCompletedEmergency",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanCMDBUpdate == null ||\r\n                                entity.TasksExecutionPlanCMDBUpdate.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "buildTasksCompleted",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanBuildAndTest == null ||\r\n                                entity.TasksExecutionPlanBuildAndTest.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "buildTasksCompletedEmergency",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.TasksExecutionPlanBuildAndTest == null ||\r\n                                entity.TasksExecutionPlanBuildAndTest.ExecutionPlanCompletionCode == 'Success'}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "NotAllTasksCompleted.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "displayLabelMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "DisplayLabel"
                }
            ]
        },
        {
            "id": "descriptionMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "Description"
                }
            ]
        },
        {
            "id": "categoryMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "Category"
                }
            ]
        },
        {
            "id": "completionCodeMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "CompletionCode"
                }
            ]
        },
        {
            "id": "completionCodeMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "CompletionCode"
                }
            ]
        },
        {
            "id": "completionCodeMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "CompletionCode"
                }
            ]
        },
        {
            "id": "reviewResultsMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ReviewResults"
                }
            ]
        },
        {
            "id": "reviewResultsMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ReviewResults"
                }
            ]
        },
        {
            "id": "reviewResultsMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ReviewResults"
                }
            ]
        },
        {
            "id": "RequestedByPersonMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RequestedByPerson"
                }
            ]
        },
        {
            "id": "reasonForChangeMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ReasonForChange"
                }
            ]
        },
        {
            "id": "basedOnChangeModelMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BasedOnChangeModel"
                }
            ]
        },
        {
            "id": "justificationMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "Justification"
                }
            ]
        },
        {
            "id": "affectsActualServiceMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "AffectsActualService"
                }
            ]
        },
        {
            "id": "impactScopeMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImpactScope"
                }
            ]
        },
        {
            "id": "urgencyMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "Urgency"
                }
            ]
        },
        {
            "id": "ownedByGroupMandatory",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "OwnedByGroup"
                }
            ]
        },
        {
            "id": "ownedByPersonMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "OwnedByPerson"
                }
            ]
        },
        {
            "id": "ownedByPersonMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "OwnedByPerson"
                }
            ]
        },
        {
            "id": "ownedByPersonMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "OwnedByPerson"
                }
            ]
        },
        {
            "id": "ownedByPersonMandatory4",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "OwnedByPerson"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory4",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory5",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory6",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory7",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory8",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory9",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory10",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory11",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "riskAssessmentMandatory12",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "RiskAssessment"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory4",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory5",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory7",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory8",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory9",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory10",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory11",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory12",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory13",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory14",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory15",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "implementationPlanMandatory16",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ImplementationPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory4",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory5",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory7",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory8",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory9",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory10",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory11",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory12",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory13",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory14",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory15",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "backoutPlanMandatory16",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "BackoutPlan"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "scheduledTimeValidation",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledStartTime < entity.ScheduledEndTime}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "StartDateMustBeSmallerThanEndDate.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "scheduledDownTimeValidation",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledDowntimeStartTime < entity.ScheduledDowntimeEndTime}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "DownTimeDateMustBeSmallerThanEndDate.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "scheduledDowntimeStartTimeBoundariesValidation",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledStartTime != null &&entity.ScheduledDowntimeStartTime != null && entity.ScheduledStartTime <= entity.ScheduledDowntimeStartTime}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "ScheduledDownTimeBoundariesViolation.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "scheduledDowntimeEndTimeBoundariesValidation",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledEndTime != null && entity.ScheduledDowntimeEndTime != null && entity.ScheduledEndTime >= entity.ScheduledDowntimeEndTime}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "ScheduledDownTimeBoundariesViolation.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "actualDowntimeStartTimeBoundariesValidation",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ActualStartTime != null &&entity.ActualDowntimeStartTime != null &&entity.ActualStartTime <= entity.ActualDowntimeStartTime}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "ActualDownTimeBoundariesViolation.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "actualDowntimeEndTimeBoundariesValidation",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ActualEndTime != null &&entity.ActualDowntimeEndTime != null &&entity.ActualEndTime >= entity.ActualDowntimeEndTime}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "ActualDownTimeBoundariesViolation.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "actualTimeValidation",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ActualStartTime < entity.ActualEndTime}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "ActualTimeDateMustBeSmallerThanEndDate.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "scheduledStartTimeGreaterThanNow1",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledStartTime > now()}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "ScheduledStartTimeMustBeGreaterThanNow.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "scheduledStartTimeGreaterThanNow2",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${entity.ScheduledStartTime > now()}"
                },
                {
                    "Name": "resourceKey",
                    "Value": "ScheduledStartTimeMustBeGreaterThanNow.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "actualTimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${(current_update.ActualStartTime.IsChanged || current_update.ActualEndTime.IsChanged) && (entity.ActualStartTime != null && entity.ActualEndTime != null)}"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory4",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory5",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory7",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory8",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory9",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory10",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory11",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory12",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory13",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory14",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory15",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledStartTimeMandatory16",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledStartTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory4",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory5",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory7",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory8",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory9",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory10",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory11",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory12",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory13",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory14",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory15",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ScheduledEndTimeMandatory16",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ScheduledEndTime"
                }
            ]
        },
        {
            "id": "ActualStartTimeMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ActualStartTime"
                }
            ]
        },
        {
            "id": "ActualStartTimeMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ActualStartTime"
                }
            ]
        },
        {
            "id": "ActualStartTimeMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ActualStartTime"
                }
            ]
        },
        {
            "id": "ActualEndTimeMandatory1",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ActualEndTime"
                }
            ]
        },
        {
            "id": "ActualEndTimeMandatory2",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ActualEndTime"
                }
            ]
        },
        {
            "id": "ActualEndTimeMandatory3",
            "Type": "validation",
            "TemplateId": "isFieldMandatory",
            "Parameters": [
                {
                    "Name": "fieldName",
                    "Value": "ActualEndTime"
                }
            ]
        },
        {
            "id": "modelNotChanged",
            "Type": "validation",
            "TemplateId": "dslValidation",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${!current_update.BasedOnChangeModel.IsChanged || current_update.BasedOnChangeModel.OldValue == null || (current_update.BasedOnChangeModel.OldValue != null && current_update.BasedOnChangeModel.NewValue != null && current_update.BasedOnChangeModel.OldValue.Id == current_update.BasedOnChangeModel.NewValue.Id)}"
                } ,
                {
                    "Name": "resourceKey",
                    "Value": "ChangeModelCanBeEditedInLogOrEvaluatedPhasesOnly.displayLabel"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "change_workflow_error_messages"
                }
            ]
        },
        {
            "id": "disableModelField",
            "Type": "rendering",
            "TemplateId": "disableField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "BasedOnChangeModel"
                }
            ]
        },
        {
            "id": "disablePriority",
            "Type": "rendering",
            "TemplateId": "disableField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "Priority"
                }
            ]
        },
        {
            "id": "disableBreachState",
            "Type": "rendering",
            "TemplateId": "disableField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "BreachStatus"
                }
            ]
        },
        {
            "id": "HideEmergencyChange",
            "Type": "rendering",
            "TemplateId": "hideField",
            "Parameters": [
                {
                    "Name": "targetFieldName",
                    "Value": "EmergencyChange"
                }
            ]
        },
        {
            "id": "renderingRuleHideReviewSection",
            "Type": "rendering",
            "TemplateId": "hideSection",
            "Parameters": [
                {
                    "Name": "targetFormName",
                    "Value": "full"
                },
                {
                    "Name": "targetSectionName",
                    "Value": "Review"
                }
            ]
        },
        {
            "id": "renderingRuleHideReviewSection2",
            "Type": "rendering",
            "TemplateId": "hideSection",
            "Parameters": [
                {
                    "Name": "targetFormName",
                    "Value": "preview"
                },
                {
                    "Name": "targetSectionName",
                    "Value": "Review"
                }
            ]
        },
        {
            "id": "renderingRuleHideReviewSection3",
            "Type": "rendering",
            "TemplateId": "hideSection",
            "Parameters": [
                {
                    "Name": "targetFormName",
                    "Value": "previewCalendar"
                },
                {
                    "Name": "targetSectionName",
                    "Value": "Review"
                }
            ]
        },
        {
            "id": "CascadeModelToServiceAndCategory",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "BasedOnChangeModel"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.changemodelsbyserviceandcategory.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": [
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Change'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "ModelType"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Active'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "PhaseId"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${union_with_null(entity.Category.Id,entity.Category.CategoryHasLevel1Children.Id,entity.Category.CategoryHasLevel2Children.Id,null)}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "EntityModelCategory.Id"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${union_with_null(entity.AffectsActualService.Id,null)}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "EntityModelAffectsActualService.Id"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "id": "CascadeModelToService",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "BasedOnChangeModel"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.changemodelsbyservice.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": [
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Change'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "ModelType"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Active'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "PhaseId"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${union_with_null(entity.AffectsActualService.Id,null)}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "EntityModelAffectsActualService.Id"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "id": "CascadeModelToService2",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "BasedOnChangeModel"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.changemodelsbyservice.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": [
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Change'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "ModelType"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Active'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "PhaseId"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${union_with_null(entity.AffectsActualService.Id,null)}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "EntityModelAffectsActualService.Id"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "id": "CascadeModelToCategory",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "BasedOnChangeModel"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.changemodelsbycategory.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": [
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Change'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "ModelType"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Active'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "PhaseId"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${union_with_null(entity.Category.Id,entity.Category.CategoryHasLevel1Children.Id,entity.Category.CategoryHasLevel2Children.Id,null)}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "EntityModelCategory.Id"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "id": "BasicModelFilter",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "BasedOnChangeModel"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.allchangemodels.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": [
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Change'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "ModelType"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Active'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "PhaseId"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "id": "BasicModelFilter2",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "BasedOnChangeModel"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.allchangemodels.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": [
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Change'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "ModelType"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        },
                        {
                            "Values": [
                                {
                                    "Name": "expression",
                                    "Value": "${'Active'}"
                                },
                                {
                                    "Name": "subField",
                                    "Value": "PhaseId"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "id": "ChangeOwnedByPersonFilter",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "OwnedByPerson"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.groupmembers.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": [
                        {
                            "Values": [
                                {
                                    "Name": "subField",
                                    "Value": "PersonToGroup.Id"
                                },
                                {
                                    "Name": "operator",
                                    "Value": "in"
                                },
                                {
                                    "Name": "expression",
                                    "Value": "${entity.OwnedByGroup.Id}"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "id": "ChangeOwnedByPersonFilterAll",
            "Type": "cascading",
            "TemplateId": "FieldSelectionRule",
            "Parameters": [
                {
                    "Name": "field",
                    "Value": "OwnedByPerson"
                },
                {
                    "Name": "title",
                    "Value": "ChangeWorkflow.global.fieldselection.allpeople.title"
                },
                {
                    "Name": "resourceBundle",
                    "Value": "workflow_resource_bundle_messages"
                },
                {
                    "Name": "filters",
                    "Values": []
                }
            ]
        },
        {
            "id": "addApprovePlanComments",
            "Type": "action",
            "TemplateId": "addComment",
            "Parameters": [
                {
                    "Name": "comment",
                    "Value": "${entity.TasksExecutionPlanApprovePlan.ApprovalDisplayComment}"
                },
                {
                    "Name": "isSystem",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "addApproveDeploymentComments",
            "Type": "action",
            "TemplateId": "addComment",
            "Parameters": [
                {
                    "Name": "comment",
                    "Value": "${entity.TasksExecutionPlanApproveDeployment.ApprovalDisplayComment}"
                },
                {
                    "Name": "isSystem",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "addECABComments",
            "Type": "action",
            "TemplateId": "addComment",
            "Parameters": [
                {
                    "Name": "comment",
                    "Value": "${entity.TasksExecutionPlanECAB.ApprovalDisplayComment}"
                },
                {
                    "Name": "isSystem",
                    "Value": "true"
                }
            ]
        },
        {
            "id": "ResetApprovePlanForApproveDeployment1",
            "Type": "action",
            "TemplateId": "ResetTaskPlan",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanApproveDeployment"
                }
            ]
        },
        {
            "id": "ResetApprovePlanForECAB",
            "Type": "action",
            "TemplateId": "ResetTaskPlan",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanECAB"
                }
            ]
        },
        {
            "id": "ResetApprovePlanForApprovePlan",
            "Type": "action",
            "TemplateId": "ResetTaskPlan",
            "Parameters": [
                {
                    "Name": "ExecutionPlanField",
                    "Value": "TasksExecutionPlanApprovePlan"
                }
            ]
        },
        {
            "id": "UpdateChangeAnalyticsStandard",
            "Type": "action",
            "TemplateId": "updateEntityAnalytics",
            "Parameters": [
                {
                    "Name": "metricNames",
                    "Values": [
                        {
                            "Value": "ChangesReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesReportedAsFailed"
                        },
                        {
                            "Value": "ChangeDuration"
                        },
                        {
                            "Value": "ChangesClosed"
                        },
                        {
                            "Value": "ChangeExecutionDuration"
                        },
                        {
                            "Value": "ChangesWithBuildAndTestReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithBuildAndTestReportedAsFailed"
                        },
                        {
                            "Value": "ChangesWithInvolvedCIsReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithInvolvedCIsReportedAsFailed"
                        },
                        {
                            "Value": "ChangesWithExecutionPlanReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithExecutionPlanReportedAsFailed"
                        },
                        {
                            "Value": "ChangeExecutionDurationCount"
                        }
                    ]
                }
            ]
        },
        {
            "id": "UpdateChangeAnalyticsNormal",
            "Type": "action",
            "TemplateId": "updateEntityAnalytics",
            "Parameters": [
                {
                    "Name": "metricNames",
                    "Values": [
                        {
                            "Value": "ChangesReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesReportedAsFailed"
                        },
                        {
                            "Value": "ChangeDuration"
                        },
                        {
                            "Value": "ChangesClosed"
                        },
                        {
                            "Value": "ChangeExecutionDuration"
                        },
                        {
                            "Value": "ChangesWithBuildAndTestReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithBuildAndTestReportedAsFailed"
                        },
                        {
                            "Value": "ChangesWithInvolvedCIsReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithInvolvedCIsReportedAsFailed"
                        },
                        {
                            "Value": "ChangesWithExecutionPlanReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithExecutionPlanReportedAsFailed"
                        },
                        {
                            "Value": "ChangeExecutionDurationCount"
                        }
                    ]
                }
            ]
        },
        {
            "id": "UpdateChangeAnalyticsEmergency",
            "Type": "action",
            "TemplateId": "updateEntityAnalytics",
            "Parameters": [
                {
                    "Name": "metricNames",
                    "Values": [
                        {
                            "Value": "ChangesReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesReportedAsFailed"
                        },
                        {
                            "Value": "ChangeDuration"
                        },
                        {
                            "Value": "ChangesClosed"
                        },
                        {
                            "Value": "ChangeExecutionDuration"
                        },
                        {
                            "Value": "ChangesWithBuildAndTestReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithBuildAndTestReportedAsFailed"
                        },
                        {
                            "Value": "ChangesWithInvolvedCIsReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithInvolvedCIsReportedAsFailed"
                        },
                        {
                            "Value": "ChangesWithExecutionPlanReportedAsSuccessful"
                        },
                        {
                            "Value": "ChangesWithExecutionPlanReportedAsFailed"
                        },
                        {
                            "Value": "ChangeExecutionDurationCount"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-1",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-2",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-3",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-4",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-5",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-6",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-7",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-8",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "BreachCalculation-9",
            "Type": "action",
            "TemplateId": "changePostCommitCalculationTemplate",
            "Parameters": [
                {
                    "Name": "AsyncAction",
                    "Values": [
                        {
                            "Value": "BreachCalculationAction"
                        }
                    ]
                },
                {
                    "Name": "AsyncActionParams",
                    "Values": [
                        {
                            "Name": "EntityId",
                            "Value": "${entity.Id}"
                        }
                    ]
                }
            ]
        },
        {
            "id": "isScheduledTimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.ScheduledStartTime.IsChanged||current_update.ScheduledEndTime.IsChanged||current_update.ScheduledDuration.IsChanged}"
                }
            ]
        },
        {
            "id": "alignScheduledTime",
            "Type": "action",
            "TemplateId": "alignStartTimeEndTimeAndDuration",
            "Parameters": [
                {
                    "Name": "startTime",
                    "Value": "ScheduledStartTime"
                },
                {
                    "Name": "endTime",
                    "Value": "ScheduledEndTime"
                },
                {
                    "Name": "duration",
                    "Value": "ScheduledDuration"
                }
            ]
        },
        {
            "id": "isScheduledDowntimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.ScheduledDowntimeStartTime.IsChanged||current_update.ScheduledDowntimeEndTime.IsChanged||current_update.ScheduledDowntimeDuration.IsChanged}"
                }
            ]
        },
        {
            "id": "alignScheduledDowntime",
            "Type": "action",
            "TemplateId": "alignStartTimeEndTimeAndDuration",
            "Parameters": [
                {
                    "Name": "startTime",
                    "Value": "ScheduledDowntimeStartTime"
                },
                {
                    "Name": "endTime",
                    "Value": "ScheduledDowntimeEndTime"
                },
                {
                    "Name": "duration",
                    "Value": "ScheduledDowntimeDuration"
                }
            ]
        },
        {
            "id": "isActualTimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.ActualStartTime.IsChanged||current_update.ActualEndTime.IsChanged||current_update.ActualDuration.IsChanged}"
                }
            ]
        },
        {
            "id": "alignActualTime",
            "Type": "action",
            "TemplateId": "alignStartTimeEndTimeAndDuration",
            "Parameters": [
                {
                    "Name": "startTime",
                    "Value": "ActualStartTime"
                },
                {
                    "Name": "endTime",
                    "Value": "ActualEndTime"
                },
                {
                    "Name": "duration",
                    "Value": "ActualDuration"
                }
            ]
        },
        {
            "id": "isActualDowntimeChanged",
            "Type": "condition",
            "TemplateId": "dslCondition",
            "Parameters": [
                {
                    "Name": "dsl",
                    "Value": "${current_update.ActualDowntimeStartTime.IsChanged||current_update.ActualDowntimeEndTime.IsChanged||current_update.ActualDowntimeDuration.IsChanged}"
                }
            ]
        },
        {
            "id": "alignActualDowntime",
            "Type": "action",
            "TemplateId": "alignStartTimeEndTimeAndDuration",
            "Parameters": [
                {
                    "Name": "startTime",
                    "Value": "ActualDowntimeStartTime"
                },
                {
                    "Name": "endTime",
                    "Value": "ActualDowntimeEndTime"
                },
                {
                    "Name": "duration",
                    "Value": "ActualDowntimeDuration"
                }
            ]
        }

    ],

    "EventHandlers": {
    "EventHandlers": {
        "AFTER_UPDATE": [
            {
                "RuleType": "action",
                "ConditionId": "changeModelReplaced",
                "RuleId": "addChangeModelReplacementComment",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "isNotCreate",
                "RuleId": "EmergencyCheckboxNotChanged",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "changeModelUpdatedForPlan",
                "RuleId": "generatePlanForPlan",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "changeModelUpdatedForBuildAndTest",
                "RuleId": "generatePlanForBuildAndTest",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "changeModelUpdatedForExecute",
                "RuleId": "generatePlanForExecute",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "changeModelUpdatedForCMDBUpdate",
                "RuleId": "generatePlanForCMDBUpdate",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "changeModelUpdatedForBackout",
                "RuleId": "generatePlanForBackout",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "changeModelUpdatedForReview",
                "RuleId": "generatePlanForReview",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "RuleId": "displayLabelMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "RuleId": "descriptionMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "phaseIdNotLogAndEvaluate1",
                "RuleId": "categoryMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "phaseIdNotLogAndEvaluateAndPlan",
                "RuleId": "ownedByPersonMandatory4",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "phaseIdNotLogAndEvaluate2",
                "RuleId": "impactScopeMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "phaseIdNotLog2",
                "RuleId": "urgencyMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "phaseIdNotLogAndEvaluate3",
                "RuleId": "ownedByGroupMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "phaseIdNotLogAndEvaluate4",
                "RuleId": "modelNotChanged",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "RuleId": "RequestedByPersonMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "RuleId": "reasonForChangeMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "RuleId": "basedOnChangeModelMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "RuleId": "justificationMandatory",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "RuleId": "affectsActualServiceMandatory",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "GLAForEmergencyChange",
                "RuleId": "GLAForEmergencyGenerateExecutionPlan",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "GLAForNormalChangeApprovePlan",
                "RuleId": "GLAForNormalApprovePlanGenerateExecutionPlan",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "GLAForNormalChangeApproveDeployment",
                "RuleId": "GLAForNormalApproveDeploymentGenerateExecutionPlan",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "LowPriorityCondition",
                "RuleId": "SetLowPriority",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "HighPriorityCondition",
                "RuleId": "SetHighPriority",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "CriticalPriorityCondition",
                "RuleId": "SetCriticalPriority",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "MediumPriorityCondition",
                "RuleId": "SetMediumPriority",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "TasksExecutionPlanPlanUpdated",
                "RuleId": "validateTaskPlanForPlan",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "TasksExecutionPlanBuildAndTestUpdated",
                "RuleId": "validateTaskPlanForBuildAndTest",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "TasksExecutionPlanExecuteUpdated",
                "RuleId": "validateTaskPlanForExecute",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "TasksExecutionPlanCMDBUpdateUpdated",
                "RuleId": "validateTaskPlanForCMDBUpdate",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "TasksExecutionPlanBackoutUpdated",
                "RuleId": "validateTaskPlanForBackout",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "TasksExecutionPlanReviewUpdated",
                "RuleId": "validateTaskPlanForReview",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "isScheduledTimeChanged",
                "RuleId": "alignScheduledTime",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "isScheduledDowntimeChanged",
                "RuleId": "alignScheduledDowntime",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "isActualTimeChanged",
                "RuleId": "alignActualTime",
                "Enabled": true
            },
            {
                "RuleType": "action",
                "ConditionId": "isActualDowntimeChanged",
                "RuleId": "alignActualDowntime",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "scheduledTimeChanged",
                "RuleId": "scheduledTimeValidation",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "scheduledDownTimeChanged",
                "RuleId": "scheduledDownTimeValidation",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "isScheduledDowntimeStartTimeChanged",
                "RuleId": "scheduledDowntimeStartTimeBoundariesValidation",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "isScheduledDowntimeEndTimeChanged",
                "RuleId": "scheduledDowntimeEndTimeBoundariesValidation",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "isActualDowntimeStartTimeChanged",
                "RuleId": "actualDowntimeStartTimeBoundariesValidation",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "isActualDowntimeEndTimeChanged",
                "RuleId": "actualDowntimeEndTimeBoundariesValidation",
                "Enabled": true
            },
            {
                "RuleType": "validation",
                "ConditionId": "actualTimeChanged",
                "RuleId": "actualTimeValidation",
                "Enabled": true
            }
        ],
        "ON_RENDER": [
            {
                "RuleType": "rendering",
                "ConditionId": "isNotPermittedToCreateEmergencyChange",
                "RuleId": "HideEmergencyChange",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "ConditionId": "ServiceAndCategoryEmpty",
                "RuleId": "BasicModelFilter",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "ConditionId": "OnlyServiceSelected",
                "RuleId": "CascadeModelToService",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "ConditionId": "OnlyCategorySelected",
                "RuleId": "CascadeModelToCategory",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "ConditionId": "OnlyCategorySelected2",
                "RuleId": "BasicModelFilter2",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "ConditionId": "ServiceAndCategorySelected",
                "RuleId": "CascadeModelToServiceAndCategory",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "ConditionId": "ServiceAndCategorySelected2",
                "RuleId": "CascadeModelToService2",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "ConditionId": "checkForOwnedByGroupGroupMembersCondition",
                "RuleId": "ChangeOwnedByPersonFilter",
                "Enabled": true
            },
            {
                "RuleType": "cascading",
                "RuleId": "ChangeOwnedByPersonFilterAll",
                "Enabled": true
            },
            {
                "RuleType": "rendering",
                "RuleId": "disablePriority",
                "Enabled": true
            },
            {
                "RuleType": "rendering",
                "ConditionId": "isNotInReviewCloseSection",
                "RuleId": "renderingRuleHideReviewSection",
                "Enabled": true
            },
            {
                "RuleType": "rendering",
                "ConditionId": "isNotInReviewCloseSection2",
                "RuleId": "renderingRuleHideReviewSection2",
                "Enabled": true
            },
            {
                "RuleType": "rendering",
                "ConditionId": "isNotInReviewCloseSection3",
                "RuleId": "renderingRuleHideReviewSection3",
                "Enabled": true
            },
            {
                "RuleType": "rendering",
                "ConditionId": "isNotInLogOrEvaluatePhase",
                "RuleId": "disableModelField",
                "Enabled": true
            }
        ],
        "ON_ENTER": [
            {
                "RuleType": "action",
                "ConditionId": "isInLogPhase",
                "RuleId": "SetBuildAndTestTrueInLogPhase",
                "Enabled": true
            }
        ]
    },
    "DevPreEventHandlers": {
        "BEFORE_UPDATE": [
            {
                "RuleType": "action",
                "ConditionId": "changeModelUpdatedForApplyModel",
                "RuleId": "applyChangeModel",
                "Enabled": true
            }
        ],
        "AFTER_COMMIT": [
            {
                "RuleType": "action",
                "ConditionId": "shouldCalculateBreach",
                "RuleId": "BreachCalculation",
                "Enabled": true
            }
        ],
        "AFTER_UPDATE": [
            {
                "RuleType": "action",
                "ConditionId": "valueForBreachedStateIsNotCalculated1",
                "RuleId": "SetDefaultValueForBreachState",
                "Enabled": true
            }
        ],
        "ON_RENDER": [
            {
                "RuleType": "rendering",
                "RuleId": "disableBreachState",
                "Enabled": true
            }
        ]
    }
},

    "Processes": [
    {
        "id": "Emergency",
        "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.displayLabel",
        "DefaultPhaseId": "Log",
        "FirstPhaseId": "Log",
        "ProcessSelectionFieldValues": ["EmergencyChange"],
        "Metaphases": [
            {
                "id": "Classification",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.metaphase.Classification.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "setActiveFlag-11",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Planning",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.metaphase.Planning.displayLabel"
            },
            {
                "id": "Deployment",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.metaphase.Deployment.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-1",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Validation",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.metaphase.Validation.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-2",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Done",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.metaphase.Done.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "unsetActiveFlag-11",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "RuleId": "UpdateChangeAnalyticsEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-3",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPostEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "CloseTimeShouldBeSetSystem1",
                                "RuleId": "SetCloseTimeToNowSystem1",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "Phases": [
            {
                "id": "Log",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Log.displayLabel",
                "MetaphaseId": "Classification",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Log.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "ConditionId": "UrgencyIsNotSet8",
                                "RuleId": "SetUrgencyAsSevereDisruption1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet20",
                                "RuleId": "SetRequestedByPerson1",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "validation",
                                "ConditionId": "CanCreateEmergencyChangeForEmergencyIfSet",
                                "RuleId": "CanCreateEmergencyChangeForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Evaluate",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Evaluate.displayLabel",
                "MetaphaseId": "Classification",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Evaluate.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "ConditionId": "UrgencyIsNotSet7",
                                "RuleId": "SetUrgencyAsSevereDisruption2",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationToServiceOwnerEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Plan",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Plan.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Plan.instruction",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestratePlanForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BuildAndTest",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.BuildAndTest.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.BuildAndTest.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ownedByPersonMandatory3",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet1",
                                "RuleId": "SendNotificationToGroupManagerBuildPhaseEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet1",
                                "RuleId": "SendNotificationToAssignedPersonBuildPhaseEmergency",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateBuildAndTestForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ECAB",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.ECAB.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.ECAB.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet2",
                                "RuleId": "SendNotificationToGroupManagerApproveDeploymentPhaseEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet2",
                                "RuleId": "SendNotificationToAssignedPersonApproveDeploymentPhaseEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "approveDeniedConditionForECAB2",
                                "RuleId": "ResetApprovePlanForECAB",
                                "Enabled": true
                            }
                        ],
                        "ON_LEAVE": [
                            {
                                "RuleType": "action",
                                "RuleId": "addECABComments",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateECAB",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Execute",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Execute.displayLabel",
                "MetaphaseId": "Deployment",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Execute.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory2",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet3",
                                "RuleId": "SendNotificationToGroupManagerExecutePhaseEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet3",
                                "RuleId": "SendNotificationToAssignedPersonExecutePhaseEmergency",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateExecuteForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Backout",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Backout.displayLabel",
                "MetaphaseId": "Deployment",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Backout.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory3",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory3",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory3",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory3",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet4",
                                "RuleId": "SendNotificationToGroupManagerBackoutPhaseEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet4",
                                "RuleId": "SendNotificationToAssignedPersonBackoutPhaseEmergency",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateBackoutForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "CMDBUpdate",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.CMDBUpdate.displayLabel",
                "MetaphaseId": "Validation",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.CMDBUpdate.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory3",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory4",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory4",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory4",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory4",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ActualStartTimeMandatory1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ActualEndTimeMandatory1",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet5",
                                "RuleId": "SendNotificationToGroupManagerCmdbUpdatePhaseEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet5",
                                "RuleId": "SendNotificationToAssignedPersonCmdbUpdatePhaseEmergency",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateCMDBUpdateForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Review",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Review.displayLabel",
                "MetaphaseId": "Validation",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Review.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory4",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory5",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory5",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory5",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory5",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet6",
                                "RuleId": "SendNotificationToGroupManagerReviewPhaseEmergency",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet6",
                                "RuleId": "SendNotificationToAssignedPersonReviewPhaseEmergency",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateReviewForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Close",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Close.displayLabel",
                "MetaphaseId": "Done",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Close.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "completionCodeMandatory3",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "reviewResultsMandatory3",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationOnChangeClosed2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "CloseTimeIsNotSet1",
                                "RuleId": "SetCloseTimeToNow1",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Abandon",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Emergency.phase.Abandon.displayLabel",
                "MetaphaseId": "Done",
                "InstructionsBundleKey": "ChangeWorkflow.process.Emergency.phase.Abandon.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationOnChangeAbandoned1",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "Transitions": [
            {
                "id": "LogToEvaluate",
                "FromPhaseId": "Log",
                "ToPhaseId": "Evaluate",
                "IsAutomatic": true,
                "IsPrimary": true,
                "ConditionId": "LogPhaseMandatoryFieldsEmergency"
            },
            {
                "id": "EvaluateToPlan",
                "FromPhaseId": "Evaluate",
                "ToPhaseId": "Plan",
                "IsPrimary": true
            },
            {
                "id": "EvaluateToAbandon",
                "FromPhaseId": "Evaluate",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned1",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "PlanToBuildAndTest",
                "FromPhaseId": "Plan",
                "ToPhaseId": "BuildAndTest",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "planTasksCompletedEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "PlanToAbandon",
                "FromPhaseId": "Plan",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned2",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BuildAndTestToECAB",
                "FromPhaseId": "BuildAndTest",
                "ToPhaseId": "ECAB",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "buildTasksCompletedEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ECABToPlan",
                "FromPhaseId": "ECAB",
                "ToPhaseId": "Plan",
                "IsAutomatic": true,
                "IsPrimary": false,
                "ConditionId": "approveDeniedConditionForECAB1",
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationToChangeOwnerOnECABDeny",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ECABToExecute",
                "FromPhaseId": "ECAB",
                "ToPhaseId": "Execute",
                "IsAutomatic": true,
                "IsPrimary": true,
                "ConditionId": "approveSuccessConditionForECAB"
            },
            {
                "id": "ExecuteToCMDBUpdate",
                "FromPhaseId": "Execute",
                "ToPhaseId": "CMDBUpdate",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "executeTasksCompletedEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ExecuteToBackout",
                "FromPhaseId": "Execute",
                "ToPhaseId": "Backout",
                "IsPrimary": false
            },
            {
                "id": "ExecuteToAbandon",
                "FromPhaseId": "Execute",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned3",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "CMDBUpdateToReview",
                "FromPhaseId": "CMDBUpdate",
                "ToPhaseId": "Review",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "cmdbUpdateTasksCompletedEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BackoutToReview",
                "FromPhaseId": "Backout",
                "ToPhaseId": "Review",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutTasksCompletedForEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BuildAndTestToAbandon",
                "FromPhaseId": "BuildAndTest",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned4",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ReviewToClose",
                "FromPhaseId": "Review",
                "ToPhaseId": "Close",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "reviewTasksCompletedEmergency",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ]
    },
    {
        "id": "Normal",
        "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.displayLabel",
        "DefaultPhaseId": "Log",
        "FirstPhaseId": "Log",
        "ProcessSelectionFieldValues": ["NormalChange"],
        "Metaphases": [
            {
                "id": "Classification",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.metaphase.Classification.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "setActiveFlag-21",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Planning",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.metaphase.Planning.displayLabel"
            },
            {
                "id": "Deployment",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.metaphase.Deployment.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-4",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Validation",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.metaphase.Validation.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-5",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Done",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.metaphase.Done.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "unsetActiveFlag-21",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "RuleId": "UpdateChangeAnalyticsNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-6",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPostEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "CloseTimeShouldBeSetSystem2",
                                "RuleId": "SetCloseTimeToNowSystem2",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "Phases": [
            {
                "id": "Log",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Log.displayLabel",
                "MetaphaseId": "Classification",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Log.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "ConditionId": "EmergencyCheckboxIsSetForNormal",
                                "RuleId": "SetEmergencyWorkflowTypeForNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "UrgencyIsNotSet5",
                                "RuleId": "SetUrgencyAsSlightDisruption2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet19",
                                "RuleId": "SetRequestedByPerson2",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "validation",
                                "ConditionId": "CanCreateEmergencyChangeForNormalIfSet",
                                "RuleId": "CanCreateEmergencyChangeForNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Evaluate",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Evaluate.displayLabel",
                "MetaphaseId": "Classification",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Evaluate.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "ConditionId": "UrgencyIsNotSet4",
                                "RuleId": "SetUrgencyAsSlightDisruption3",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationToServiceOwnerNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Plan",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Plan.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Plan.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet7",
                                "RuleId": "SendNotificationToGroupManagerPlanPhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet7",
                                "RuleId": "SendNotificationToAssignedPersonPlanPhaseNormal",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestratePlanForNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BuildAndTest",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.BuildAndTest.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.BuildAndTest.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory5",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory7",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory7",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory7",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory7",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet8",
                                "RuleId": "SendNotificationToGroupManagerBuildPhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet8",
                                "RuleId": "SendNotificationToAssignedPersonBuildPhaseNormal",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateBuildAndTestForNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ApproveDeployment",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.ApproveDeployment.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.ApproveDeployment.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet9",
                                "RuleId": "SendNotificationToGroupManagerApproveDeploymentPhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet9",
                                "RuleId": "SendNotificationToAssignedPersonApproveDeploymentPhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "approveDeniedConditionForApproveDeployment2",
                                "RuleId": "ResetApprovePlanForApproveDeployment1",
                                "Enabled": true
                            }
                        ],
                        "ON_LEAVE": [
                            {
                                "RuleType": "action",
                                "RuleId": "addApproveDeploymentComments",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateApproveDeployment",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ApprovePlan",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.ApprovePlan.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.ApprovePlan.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory12",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory12",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory12",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory12",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory9",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ownedByPersonMandatory1",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet10",
                                "RuleId": "SendNotificationToGroupManagerApprovePlanPhase",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet10",
                                "RuleId": "SendNotificationToAssignedPersonApprovePlanPhase",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "approveDeniedConditionForApprovePlan2",
                                "RuleId": "ResetApprovePlanForApprovePlan",
                                "Enabled": true
                            }
                        ],
                        "ON_LEAVE": [
                            {
                                "RuleType": "action",
                                "RuleId": "addApprovePlanComments",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateApprovePlan",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Backout",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Backout.displayLabel",
                "MetaphaseId": "Deployment",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Backout.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory8",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory8",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory8",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory8",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet11",
                                "RuleId": "SendNotificationToGroupManagerBackoutPhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet11",
                                "RuleId": "SendNotificationToAssignedPersonBackoutPhaseNormal",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateBackoutForNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Execute",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Execute.displayLabel",
                "MetaphaseId": "Deployment",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Execute.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory6",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory9",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory9",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory9",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory9",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet12",
                                "RuleId": "SendNotificationToGroupManagerExecutePhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet12",
                                "RuleId": "SendNotificationToAssignedPersonExecutePhaseNormal",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateExecuteForNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "CMDBUpdate",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.CMDBUpdate.displayLabel",
                "MetaphaseId": "Validation",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.CMDBUpdate.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory7",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory10",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory10",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory10",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory10",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ActualStartTimeMandatory2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ActualEndTimeMandatory2",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet13",
                                "RuleId": "SendNotificationToGroupManagerCmdbUpdatePhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet13",
                                "RuleId": "SendNotificationToAssignedPersonCmdbUpdatePhaseNormal",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateCMDBUpdateForNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Review",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Review.displayLabel",
                "MetaphaseId": "Validation",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Review.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory8",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory11",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory11",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory11",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory11",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet14",
                                "RuleId": "SendNotificationToGroupManagerReviewPhaseNormal",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet14",
                                "RuleId": "SendNotificationToAssignedPersonReviewPhaseNormal",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateReviewForNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Abandon",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Abandon.displayLabel",
                "MetaphaseId": "Done",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Abandon.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationOnChangeAbandoned2",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Close",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Normal.phase.Close.displayLabel",
                "MetaphaseId": "Done",
                "InstructionsBundleKey": "ChangeWorkflow.process.Normal.phase.Close.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "completionCodeMandatory2",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "reviewResultsMandatory2",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationOnChangeClosed3",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "CloseTimeIsNotSet2",
                                "RuleId": "SetCloseTimeToNow2",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "Transitions": [
            {
                "id": "LogToEvaluate",
                "FromPhaseId": "Log",
                "ToPhaseId": "Evaluate",
                "IsAutomatic": true,
                "IsPrimary": true,
                "ConditionId": "LogPhaseMandatoryFieldsNormal"
            },
            {
                "id": "EvaluateToPlan",
                "FromPhaseId": "Evaluate",
                "ToPhaseId": "Plan",
                "IsPrimary": true
            },
            {
                "id": "EvaluateToAbandon",
                "FromPhaseId": "Evaluate",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned5",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "PlanToApprovePlan",
                "FromPhaseId": "Plan",
                "ToPhaseId": "ApprovePlan",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "planTasksCompletedNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "PlanToAbandon",
                "FromPhaseId": "Plan",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned6",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ApprovePlanToBuildAndTest",
                "FromPhaseId": "ApprovePlan",
                "ToPhaseId": "BuildAndTest",
                "IsAutomatic": true,
                "IsPrimary": true,
                "ConditionId": "approveSuccessConditionForApprovePlanAndTestRequiredTrue"
            },
            {
                "id": "ApprovePlanToAbandon",
                "FromPhaseId": "ApprovePlan",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned7",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ApprovePlanToApproveDeployment",
                "FromPhaseId": "ApprovePlan",
                "ToPhaseId": "ApproveDeployment",
                "IsAutomatic": true,
                "IsPrimary": false,
                "ConditionId": "ApproveSuccessConditionForApproveDeploymentTestRequiredFalse"
            },
            {
                "id": "ApprovePlanToPlan",
                "FromPhaseId": "ApprovePlan",
                "ToPhaseId": "Plan",
                "IsAutomatic": true,
                "IsPrimary": false,
                "ConditionId": "approveDeniedConditionForApprovePlan1",
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationToChangeOwnerOnPlanDeny",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BuildAndTestToApproveDeployment",
                "FromPhaseId": "BuildAndTest",
                "ToPhaseId": "ApproveDeployment",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "buildTasksCompleted",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ApproveDeploymentToBuildAndTest",
                "FromPhaseId": "ApproveDeployment",
                "ToPhaseId": "BuildAndTest",
                "IsAutomatic": true,
                "IsPrimary": false,
                "ConditionId": "TestRequiredEqualsTrue2AndApproveDenied",
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationToChangeOwnerOnDeploymentDeny1",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ApproveDeploymentToExecute",
                "FromPhaseId": "ApproveDeployment",
                "ToPhaseId": "Execute",
                "IsAutomatic": true,
                "IsPrimary": true,
                "ConditionId": "approveSuccessForApproveDeployment"
            },
            {
                "id": "ApproveDeploymentToPlan",
                "FromPhaseId": "ApproveDeployment",
                "ToPhaseId": "Plan",
                "IsAutomatic": true,
                "IsPrimary": false,
                "ConditionId": "approveDeniedConditionForApproveDeployment1",
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationToChangeOwnerOnDeploymentDeny2",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ApproveDeploymentToAbandon",
                "FromPhaseId": "ApproveDeployment",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned8",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ExecuteToCMDBUpdate",
                "FromPhaseId": "Execute",
                "ToPhaseId": "CMDBUpdate",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "executeTasksCompletedNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ExecuteToBackout",
                "FromPhaseId": "Execute",
                "ToPhaseId": "Backout",
                "IsPrimary": false
            },
            {
                "id": "ExecuteToAbandon",
                "FromPhaseId": "Execute",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned9",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "CMDBUpdateToReview",
                "FromPhaseId": "CMDBUpdate",
                "ToPhaseId": "Review",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "cmdbUpdateTasksCompletedNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BackoutToReview",
                "FromPhaseId": "Backout",
                "ToPhaseId": "Review",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutTasksCompleted",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BuildAndTestToAbandon",
                "FromPhaseId": "BuildAndTest",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned10",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ReviewToClose",
                "FromPhaseId": "Review",
                "ToPhaseId": "Close",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "reviewTasksCompletedNormal",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "EventHandlers": {
            "EventHandlers": {
                "AFTER_UPDATE": [
                    {
                        "RuleType": "validation",
                        "ConditionId": "isScheduledTimeNotNull1",
                        "RuleId": "scheduledStartTimeGreaterThanNow1",
                        "Enabled": true
                    }
                ]
            }
        }
    },
    {
        "id": "Standard",
        "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.displayLabel",
        "DefaultPhaseId": "Log",
        "FirstPhaseId": "Log",
        "ProcessSelectionFieldValues": ["StandardChange"],
        "Metaphases": [
            {
                "id": "Classification",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.metaphase.Classification.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "setActiveFlag-31",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Planning",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.metaphase.Planning.displayLabel"
            },
            {
                "id": "Deployment",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.metaphase.Deployment.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-7",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Validation",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.metaphase.Validation.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-8",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Done",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.metaphase.Done.displayLabel",
                "EventHandlers": {
                    "DevPreEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "unsetActiveFlag-31",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "RuleId": "UpdateChangeAnalyticsStandard",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "RuleId": "BreachCalculation-9",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPostEventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "CloseTimeShouldBeSetSystem3",
                                "RuleId": "SetCloseTimeToNowSystem3",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "Phases": [
            {
                "id": "Log",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Log.displayLabel",
                "MetaphaseId": "Classification",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Log.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "ConditionId": "EmergencyCheckboxIsSetForStandard",
                                "RuleId": "SetEmergencyWorkflowTypeForStandard",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "UrgencyIsNotSet2",
                                "RuleId": "SetUrgencyAsSlightDisruption5",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet22",
                                "RuleId": "SetRequestedByPerson4",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "validation",
                                "ConditionId": "CanCreateEmergencyChangeForStandardIfSet",
                                "RuleId": "CanCreateEmergencyChangeForStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Evaluate",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Evaluate.displayLabel",
                "MetaphaseId": "Classification",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Evaluate.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "ConditionId": "UrgencyIsNotSet1",
                                "RuleId": "SetUrgencyAsSlightDisruption6",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationToServiceOwnerStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Plan",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Plan.displayLabel",
                "MetaphaseId": "Planning",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Plan.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet15",
                                "RuleId": "SendNotificationToGroupManagerPlanPhaseStandard",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet15",
                                "RuleId": "SendNotificationToAssignedPersonPlanPhaseStandard",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestratePlanForStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Execute",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Execute.displayLabel",
                "MetaphaseId": "Deployment",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Execute.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet21",
                                "RuleId": "SendNotificationToGroupManagerExecutePhaseStandard",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet19",
                                "RuleId": "SendNotificationToAssignedPersonExecutePhaseStandard",
                                "Enabled": true
                            }
                        ],
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory10",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory16",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory16",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory16",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory16",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ownedByPersonMandatory2",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateExecuteForStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "CMDBUpdate",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.CMDBUpdate.displayLabel",
                "MetaphaseId": "Validation",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.CMDBUpdate.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory11",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory13",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory13",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory13",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory13",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ActualStartTimeMandatory3",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ActualEndTimeMandatory3",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet16",
                                "RuleId": "SendNotificationToGroupManagerCmdbUpdatePhaseStandard",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet16",
                                "RuleId": "SendNotificationToAssignedPersonCmdbUpdatePhaseStandard",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateCMDBUpdateForStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Review",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Review.displayLabel",
                "MetaphaseId": "Validation",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Review.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "riskAssessmentMandatory12",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory14",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory14",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory14",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory14",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet17",
                                "RuleId": "SendNotificationToGroupManagerReviewPhaseStandard",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet17",
                                "RuleId": "SendNotificationToAssignedPersonReviewPhaseStandard",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateReviewForStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Backout",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Backout.displayLabel",
                "MetaphaseId": "Deployment",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Backout.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "implementationPlanMandatory15",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutPlanMandatory15",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledStartTimeMandatory15",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "ScheduledEndTimeMandatory15",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsNotSet18",
                                "RuleId": "SendNotificationToGroupManagerBackoutPhaseStandard",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "RequestedByPersonIsSet18",
                                "RuleId": "SendNotificationToAssignedPersonBackoutPhaseStandard",
                                "Enabled": true
                            }
                        ]
                    },
                    "DevPreEventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "action",
                                "RuleId": "OrchestrateBackoutForStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Abandon",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Abandon.displayLabel",
                "MetaphaseId": "Done",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Abandon.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationOnChangeAbandoned3",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "Close",
                "DisplayLabelBundleKey": "ChangeWorkflow.process.Standard.phase.Close.displayLabel",
                "MetaphaseId": "Done",
                "InstructionsBundleKey": "ChangeWorkflow.process.Standard.phase.Close.instruction",
                "EventHandlers": {
                    "EventHandlers": {
                        "AFTER_UPDATE": [
                            {
                                "RuleType": "validation",
                                "RuleId": "completionCodeMandatory1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "validation",
                                "RuleId": "reviewResultsMandatory1",
                                "Enabled": true
                            }
                        ],
                        "ON_ENTER": [
                            {
                                "RuleType": "action",
                                "RuleId": "SendNotificationOnChangeClosed1",
                                "Enabled": true
                            },
                            {
                                "RuleType": "action",
                                "ConditionId": "CloseTimeIsNotSet3",
                                "RuleId": "SetCloseTimeToNow3",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "Transitions": [
            {
                "id": "LogToEvaluate",
                "FromPhaseId": "Log",
                "ToPhaseId": "Evaluate",
                "IsAutomatic": true,
                "IsPrimary": true,
                "ConditionId": "LogPhaseMandatoryFieldsStandard"
            },
            {
                "id": "EvaluateToPlan",
                "FromPhaseId": "Evaluate",
                "ToPhaseId": "Plan",
                "IsPrimary": true
            },
            {
                "id": "EvaluateToAbandon",
                "FromPhaseId": "Evaluate",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned11",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "PlanToExecute",
                "FromPhaseId": "Plan",
                "ToPhaseId": "Execute",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "planTasksCompletedStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "PlanToAbandon",
                "FromPhaseId": "Plan",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned12",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ExecuteToCMDBUpdate",
                "FromPhaseId": "Execute",
                "ToPhaseId": "CMDBUpdate",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "executeTasksCompletedStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ExecuteToBackout",
                "FromPhaseId": "Execute",
                "ToPhaseId": "Backout",
                "IsPrimary": false
            },
            {
                "id": "ExecuteToAbandon",
                "FromPhaseId": "Execute",
                "ToPhaseId": "Abandon",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "action",
                                "RuleId": "SetCompletionCodeAsAbandoned13",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "CMDBUpdateToReview",
                "FromPhaseId": "CMDBUpdate",
                "ToPhaseId": "Review",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "cmdbUpdateTasksCompletedStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "BackoutToReview",
                "FromPhaseId": "Backout",
                "ToPhaseId": "Review",
                "IsPrimary": false,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "backoutTasksCompletedForStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            },
            {
                "id": "ReviewToClose",
                "FromPhaseId": "Review",
                "ToPhaseId": "Close",
                "IsPrimary": true,
                "OnTransitionRules": {
                    "EventHandlers": {
                        "ON_TRANSITION": [
                            {
                                "RuleType": "validation",
                                "RuleId": "reviewTasksCompletedStandard",
                                "Enabled": true
                            }
                        ]
                    }
                }
            }
        ],
        "EventHandlers": {
            "EventHandlers": {
                "AFTER_UPDATE": [
                    {
                        "RuleType": "validation",
                        "ConditionId": "isScheduledTimeNotNull2",
                        "RuleId": "scheduledStartTimeGreaterThanNow2",
                        "Enabled": true
                    }
                ]
            }
        }
    }
]}